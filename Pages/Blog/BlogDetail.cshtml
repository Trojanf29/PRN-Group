@page "/blog/{urlHandle}"
@model Bloggie_Web.Pages.Blog.BlogDetailModel

@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager
@inject SignInManager<IdentityUser> signInManager

<div class="row justify-content-center">
    <div class="col-lg-12 col-md-6">
        @if (Model.Blog != null)
        {
            ViewData["Title"] = Model.Blog.PageTitle;
            <h2 class="my-5 fw-bold text-center">@Model.Blog.Heading</h2>

            <div class="d-flex justify-content-between mb-2">
                <strong>Author: @Model.Blog.Author</strong>
                <strong>Published On: @Model.Blog.PublishedDate.ToString("dd/MM/yyyy")</strong>
            </div>

            @foreach (var tag in Model.Blog.Tags)
            {
                <span class="fw-normal badge bg-primary mb-2" style="padding: 6px;">@tag.Name</span>
            }
            <span class="float-end mb-2">
                @if (signInManager.IsSignedIn(User))
                {
                    @if (Model.IsUserLiked)
                    {
                        <i class="bi bi-hand-thumbs-up-fill" style"color: blue;"></i>
                    }
                    else
                    {
                        <a style="cursor: pointer;" id="btnBlogLike">
                            <i class="bi bi-hand-thumbs-up"></i>
                        </a>
                    }
                }
                <span id="totalLikes">@Model.TotalBlogLikes </span> Likes
            </span>

            <img src="@Model.Blog.FeatureImgUrl" class="d-block img-fluid mb-3" width="100%" />

            <div class="mb-3 blog-content">
                @Html.Raw(Model.Blog.Content)
            </div>

            <div class="card">

                <div class="card-header">
                    <h4>Comments</h4>

                    @if (signInManager.IsSignedIn(User))
                    {
                        <form method="post" asp-page="BlogDetail" asp-page-handler="Comment">

                            <div class="mb-3">
                                <input class="form-control" id="comment" asp-for="CommentContent" type="text" placeholder="Leave a comment..." required>
                                <span class="text-danger" asp-validation-for="CommentContent"></span>

                                <input asp-for="BlogPostId" type="hidden">
                            </div>
                            <div class="mb-3">
                                <button class="btn btn-primary" type="submit">Submit!</button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="mb-3">
                            <p class="fw-bold">Login to comment!</p>
                        </div>
                    }
                </div>

                <div class="card-body">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="card mb-3 bg-light">
                            <div class="card-body">
                                <div class="mb-2">
                                    @comment.Content
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span style="font-size: 13px">@comment.Username (@comment.CommentDate.ToString("dd/MM/yyyy") <span style="font-size: 12px">@comment.CommentDate.ToString("hh:mm:ss tt"))</span>

                                </div>
                            </div>
                        </div>
                    }
                </div>

                @section Scripts {
                <script>
                    jQuery(function () {
                        var btnLike = $("#btnBlogLike");
                        var totalLikes = $("#totalLikes");

                        async function getTotalLikesAsync() {
                            fetch('/api/like/@Model.Blog.Id/total-likes', {
                                method: 'GET',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Accept': '*/*'
                                }
                            })
                                .then(data => data.json())
                                .then(result => totalLikes.html(result))
                        }

                        async function addBlogLikeAsync(event) {
                            event.preventDefault();
                            fetch('/api/like/add', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Accept': '*/*'
                                },
                                body: JSON.stringify({ blogId: '@Model.Blog.Id', userId: '@userManager.GetUserId(User)' })
                            })
                                .then(() => {
                                    btnLike.html('<i class="bi bi-hand-thumbs-up-fill" style"color: blue;"></i>');
                                    btnLike.off('click', addBlogLikeAsync);
                                    getTotalLikesAsync();
                                });
                        }

                        btnLike.on('click', addBlogLikeAsync)
                    })
                </script>
            }

            </div>
        }
        else
        {
            <h1>Blog post is not found</h1>
        }
    </div>
</div>
